# ------------------------ ConfigMap -------------------------
# This ConfigMap stores a custom Nginx configuration file.
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend
  namespace: expense
data:   
    # This is a full nginx.conf configuration used by the frontend container.
    # It will be mounted as a file inside the container via volume.
  nginx.conf: |
    user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
    }

    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      large_client_header_buffers 6 32k;
      client_max_body_size 100m;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log debug; # Change to 'warn' or 'error' in production

      gzip on;
      gzip_disable "msie6";

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;

      server {
        listen 8080;
        server_name localhost;

        proxy_http_version 1.1;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            ssi    on;
        }

        location /images/ {
            expires 5s;
            root   /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /api/ {
            proxy_pass http://backend:8080/;
        }
      }
    }

---

# ------------------------ Deployment -------------------------
# This deployment runs the frontend application with 2 replicas
# and injects the custom nginx.conf from the ConfigMap via volume.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  labels:
    component: frontend
    project: expense
    tier: web

spec:
  replicas: 2
  selector:
    matchLabels:
      component: frontend
      project: expense
      tier: web
  template:
    metadata:
      labels:
        component: frontend
        project: expense
        tier: web
    spec:
      containers:
        - name: frontend
          image: darauday0/expense-frontend:v1  # Docker image for frontend app
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "150m"
              memory: "256Mi"
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf  # Overwrites default Nginx config file
              subPath: nginx.conf               # Single file mount from ConfigMap
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: frontend                     # Refers to the above ConfigMap
            items:
              - key: nginx.conf
                path: nginx.conf               # Mounts only nginx.conf from the ConfigMap

---

# ------------------------ Service -------------------------
# Exposes the frontend deployment to external traffic using LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: expense
spec:
  type: LoadBalancer
  selector:
    component: frontend
    project: expense
    tier: web
  ports:
    - protocol: TCP
      port: 80           # Port exposed to external clients
      targetPort: 8080     # Port that container listens on (must match internal app)
